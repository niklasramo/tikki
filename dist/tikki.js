import{Emitter}from"eventti";const T="undefined"==typeof performance?Date:performance;function getRafFallbackMethods(t=1e3/60){return{requestAnimationFrame:e=>setTimeout((()=>{e(T.now())}),t),cancelAnimationFrame:t=>{clearTimeout(t)}}}function getRafMethods(){return"function"==typeof requestAnimationFrame&&"function"==typeof cancelAnimationFrame?{requestAnimationFrame:requestAnimationFrame,cancelAnimationFrame:cancelAnimationFrame}:getRafFallbackMethods()}const{requestAnimationFrame:RAF,cancelAnimationFrame:CAF}=getRafMethods();class Ticker{phases;autoTick;_raf;_caf;_rafId;_queue;_emitter;constructor(t={}){const{phases:e=[],autoTick:i=!0,raf:n=RAF,caf:r=CAF}=t;this.phases=e,this.autoTick=i,this._raf=n,this._caf=r,this._rafId=null,this._emitter=new Emitter,this._queue=[],this.tick=this.tick.bind(this)}tick(t){this._rafId=null;const{_queue:e}=this;if(e.length)throw new Error("Can't tick before the previous tick has finished.");this.start();const{phases:i,_emitter:n}=this;let r,s,a,o,h,c;for(r=0,a=i.length;r<a;r++)c=n._getListeners(i[r]),c&&e.push(c);for(r=0,a=e.length;r<a;r++)for(h=e[r],s=0,o=h.length;s<o;s++)h[s](t);e.length=0,this.autoTick&&!n.listenerCount()&&this.stop()}start(){this.autoTick&&null===this._rafId&&(this._rafId=this._raf(this.tick))}stop(){null!==this._rafId&&(this._caf(this._rafId),this._rafId=null)}on(t,e){const i=this._emitter.on(t,e);return this.start(),i}once(t,e){const i=this._emitter.once(t,e);return this.start(),i}off(t,e){return this._emitter.off(t,e)}listenerCount(t){return this._emitter.listenerCount(t)}}export{Ticker,getRafFallbackMethods,getRafMethods};